@inherits BaseLoggedPage
@page "/ChangePass"
@inject HttpClient Http
@inject NavigationManager NavManager
@inject INotifier notifier
@using Auth.Domain.RequestsResponses

<h3>Change password</h3>


<div class="col-xl-7 col-lg-8 col-md-10 col-sm-12">
<SfSpinner @ref="Spinner" Type="SpinnerType.Material">
</SfSpinner>

    <div class="form-group">
        <label for="password">Current password:</label>
        <input type="password" id="password" class="form-control" @bind-value="@ChangeUserPass.OldPassword" />
    </div>
    <div class="form-group">
        <label for="newpassword">New password:</label>
        <input type="password" id="newpassword" class="form-control" @bind-value="@ChangeUserPass.NewPassword" />
    </div>
    <div class="form-group">
        <label for="confirmedPassword">Password confirmation:</label>
        <input type="password" id="confirmedPassword" class="form-control" @bind-value="@confirmPassword" />
    </div>
    <br />
    <div class="form-group">
        <button class="btn btn-primary" @onclick="RegisterUser">Save</button>
        <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </div>
</div>



@code {
    UpdateUserPasswordRequest ChangeUserPass = new UpdateUserPasswordRequest();
    string confirmPassword;

    private async Task RegisterUser()
    {
        if( LoggedUser == null )
            NavManager.NavigateTo("/Login");
        try
        {
            if (!ChangeUserPass.NewPassword.Equals(confirmPassword))
            {
                notifier.ShowWarning("Password confirmation does not match");
                return;
            }

            ChangeUserPass.UserId = LoggedUser.Id;

            if (notifier.ShowIfHasError(ChangeUserPass))
                return;

            await Spinner.ShowAsync();

            Http.SetAuthorizationHeader(LoggedUser.Token);
            var httpResponse = await Http.PutAsJsonAsync("https://localhost:44370/api/user/changepassword", ChangeUserPass);
            if (!notifier.ShowIfHasError(httpResponse))
            {
                notifier.ShowSucess("Password changed successfuly");
                ChangeUserPass.NewPassword = "";
                ChangeUserPass.OldPassword = "";
                confirmPassword = "";
                NavManager.NavigateTo("/UserNotes");
            }
        }
        catch (Exception ex)
        {
            notifier.ShowError(ex);
        }
        finally
        {
            await Spinner.HideAsync();
        }
    }

    private void Cancel()
    {
        NavManager.NavigateTo("/Login");
    }

}
